version: '3.8'

services:
  backend:
    build:
      context: .
      dockerfile: Dockerfile.dev
    ports:
      - "8080:8080"
    volumes:
      - .:/app
      - /app/tmp
    working_dir: /app
    environment:
      - DATABASE_URL=postgres://user:password@postgres:5432/incidentdb?sslmode=disable
      - PORT=8080
      - LOG_LEVEL=debug
    depends_on:
      postgres:
        condition: service_healthy
    command: /go/bin/air -c air.toml
    networks:
      - app-network

  frontend:
    build:
      context: ./web
      dockerfile: Dockerfile.dev
    ports:
      - "3000:3000"
    volumes:
      - ./web:/app
      - /app/node_modules
    environment:
      - VITE_API_TARGET=http://backend:8080
    depends_on:
      - backend
    command: npm run dev
    networks:
      - app-network

  postgres:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=incidentdb
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d incidentdb"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    networks:
      - app-network

volumes:
  postgres_data:

networks:
  app-network:
    driver: bridge