# =============================================================================
# Incident Management System Configuration
# =============================================================================
# This file contains all available configuration options for the system.
# Copy this file to .env and modify the values according to your needs.

# =============================================================================
# Core Application Settings
# =============================================================================

# PORT - HTTP server port (default: 8080)
# The port on which the incident management system will listen
PORT=8080

# LOG_LEVEL - Logging level (default: info)
# Available levels: debug, info, warn, error
# debug: Detailed debugging information
# info: General operational messages
# warn: Warning messages for potentially harmful situations
# error: Error messages for failures
LOG_LEVEL=info

# ALERTMANAGER_URL - Alertmanager webhook source URL (default: http://localhost:9093)
# URL of the Prometheus Alertmanager instance that will send webhooks
ALERTMANAGER_URL=http://localhost:9093

# ALERTMANAGER_TIMEOUT - Alertmanager connection timeout in seconds (default: 30)
# Timeout for HTTP requests to Alertmanager API
ALERTMANAGER_TIMEOUT=30

# =============================================================================
# Database Configuration
# =============================================================================

# DATABASE_URL - PostgreSQL connection string (required for persistence)
# Format: postgres://username:password@host:port/database?sslmode=disable
# Leave empty to use in-memory storage (data will be lost on restart)
# Example: postgres://incident_user:secure_password@localhost:5432/incidentdb?sslmode=require
DATABASE_URL=

# DB_MAX_OPEN_CONNS - Maximum number of open database connections (default: 25)
# Controls the connection pool size to the database
DB_MAX_OPEN_CONNS=25

# DB_MAX_IDLE_CONNS - Maximum number of idle database connections (default: 5)
# Number of connections to keep alive in the pool when not in use
DB_MAX_IDLE_CONNS=5

# DB_CONN_MAX_LIFETIME - Maximum lifetime of database connections (default: 5m)
# Duration format: 1h30m, 5m, 30s, etc.
# Connections older than this will be closed and recreated
DB_CONN_MAX_LIFETIME=5m

# =============================================================================
# Notification Settings (All Optional)
# =============================================================================
# Configure notification channels to send incident alerts
# Leave any channel empty to disable that notification method

# -----------------------------------------------------------------------------
# Slack Integration
# -----------------------------------------------------------------------------
# SLACK_TOKEN - Slack Bot OAuth token (starts with xoxb-)
# Create a Slack app and bot token at https://api.slack.com/apps
# Required permissions: chat:write, channels:read, groups:read, im:read, mpim:read
SLACK_TOKEN=

# SLACK_CHANNEL - Slack channel for notifications (with # prefix)
# Example: #alerts, #incidents, #ops-team
# The bot must be invited to this channel
SLACK_CHANNEL=

# -----------------------------------------------------------------------------
# Email/SMTP Configuration
# -----------------------------------------------------------------------------
# EMAIL_SMTP_HOST - SMTP server hostname
# Examples: smtp.gmail.com, smtp.office365.com, localhost
EMAIL_SMTP_HOST=

# EMAIL_SMTP_PORT - SMTP server port (default: 587)
# Common ports: 25 (unencrypted), 587 (STARTTLS), 465 (SSL/TLS)
EMAIL_SMTP_PORT=587

# EMAIL_USERNAME - SMTP authentication username (usually your email)
EMAIL_USERNAME=

# EMAIL_PASSWORD - SMTP authentication password or app password
# For Gmail, use App Passwords: https://support.google.com/accounts/answer/185833
# For Office365, use your account password or app password
EMAIL_PASSWORD=

# EMAIL_FROM - From address for outgoing emails (optional, defaults to EMAIL_USERNAME)
# Example: alerts@company.com, noreply@company.com
EMAIL_FROM=

# EMAIL_TO - Default recipient for incident notifications (optional)
# Can be overridden per incident. Separate multiple emails with commas
# Example: ops-team@company.com,oncall@company.com
EMAIL_TO=

# -----------------------------------------------------------------------------
# Telegram Integration
# -----------------------------------------------------------------------------
# TELEGRAM_BOT_TOKEN - Telegram Bot API token
# Create a bot by messaging @BotFather on Telegram
# Token format: 1234567890:ABCDefGhIJKlmnoPQRstuvwXYz
TELEGRAM_BOT_TOKEN=

# TELEGRAM_CHAT_ID - Telegram chat ID for notifications
# Can be a user ID, group chat ID, or channel ID (start with @channelname)
# Use @userinfobot to get your user ID or add bot to group to get group ID
TELEGRAM_CHAT_ID=

# =============================================================================
# Metrics and Monitoring
# =============================================================================

# METRICS_ENABLED - Enable Prometheus metrics endpoint (default: true)
# Set to false to disable the /metrics endpoint
METRICS_ENABLED=true

# METRICS_PORT - Port for metrics endpoint (default: 9090)
# The /metrics endpoint will be available on this port
# Different from main application port for security/networking reasons
METRICS_PORT=9090

# =============================================================================
# Security Configuration
# =============================================================================

# SERVER_READ_TIMEOUT - HTTP server read timeout (default: 30s)
# Maximum time to read request headers and body
SERVER_READ_TIMEOUT=30s

# SERVER_WRITE_TIMEOUT - HTTP server write timeout (default: 30s)  
# Maximum time to write response
SERVER_WRITE_TIMEOUT=30s

# SERVER_IDLE_TIMEOUT - HTTP server idle timeout (default: 120s)
# Maximum time to wait for next request when keep-alive is enabled
SERVER_IDLE_TIMEOUT=120s

# TLS_CERT_FILE - Path to TLS certificate file (optional)
# Enable HTTPS by providing certificate and key files
# Example: /etc/ssl/certs/server.crt
TLS_CERT_FILE=

# TLS_KEY_FILE - Path to TLS private key file (optional)
# Must be provided together with TLS_CERT_FILE
# Example: /etc/ssl/private/server.key
TLS_KEY_FILE=

# =============================================================================
# Advanced Configuration
# =============================================================================

# WEBHOOK_TIMEOUT - Timeout for processing incoming webhooks (default: 30s)
# Maximum time to process a single webhook request
WEBHOOK_TIMEOUT=30s

# NOTIFICATION_TIMEOUT - Timeout for sending notifications (default: 15s)
# Maximum time to wait for notification delivery
NOTIFICATION_TIMEOUT=15s

# MAX_INCIDENT_AGE - Maximum age before incidents are auto-resolved (default: 24h)
# Incidents older than this will be automatically resolved
# Set to 0 to disable auto-resolution
MAX_INCIDENT_AGE=24h

# ENABLE_CORS - Enable CORS headers for web UI (default: true)
# Set to false in production if serving from same domain
ENABLE_CORS=true

# CORS_ORIGIN - Allowed CORS origins (default: *)
# Comma-separated list of allowed origins for CORS requests
# Example: https://dashboard.company.com,https://alerts.company.com
CORS_ORIGIN=*

# =============================================================================
# HashiCorp Vault Integration (Future Feature)
# =============================================================================
# Configure HashiCorp Vault for secure credential management
# When enabled, sensitive credentials will be fetched from Vault instead of environment variables

# VAULT_ENABLED - Enable HashiCorp Vault integration (default: false)
# Set to true to use Vault for credential management
VAULT_ENABLED=false

# VAULT_ADDR - Vault server address
# Example: https://vault.company.com:8200
VAULT_ADDR=

# VAULT_TOKEN - Vault authentication token
# Can be a root token, service token, or renewable token
VAULT_TOKEN=

# VAULT_SECRET_PATH - Base path for secrets in Vault (default: secret/incident-management)
# Path where incident management secrets are stored
VAULT_SECRET_PATH=secret/incident-management

# VAULT_ROLE_ID - Role ID for AppRole authentication (alternative to token)
# Use with VAULT_SECRET_ID for AppRole authentication method
VAULT_ROLE_ID=

# VAULT_SECRET_ID - Secret ID for AppRole authentication (alternative to token)
# Use with VAULT_ROLE_ID for AppRole authentication method
VAULT_SECRET_ID=

# VAULT_NAMESPACE - Vault namespace (Vault Enterprise feature)
# Leave empty for Vault OSS or if not using namespaces
VAULT_NAMESPACE=

# =============================================================================
# Development and Testing
# =============================================================================

# DEBUG_MODE - Enable debug mode (default: false)
# Enables additional logging, debug endpoints, and other dev features
# ⚠️  NEVER ENABLE IN PRODUCTION - May expose sensitive information
DEBUG_MODE=false

# TEST_DATABASE_URL - Test database URL for integration tests
# Used only during testing, should be a separate database
# Example: postgres://test_user:test_pass@localhost:5432/incident_test_db?sslmode=disable
TEST_DATABASE_URL=